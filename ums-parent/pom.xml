<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>cn.ekgc.dubbo</groupId>
	<artifactId>ums-parent</artifactId>
	<version>3.0.0</version>
	<!--step0:打包成pom 文件【start】-->
	<packaging>pom</packaging>
	<!--step0:打包成pom 文件【end】-->
	<modules>
		<module>../ums-commons</module>
		<module>../ums-interface</module>
		<module>../ums-server</module>
		<module>../ums-controller</module>
	</modules>

	<!-- step1:使用Spring Boot Parent作为项目父级依赖关系 [BEGIN] -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.10.RELEASE</version>
	</parent>


	<!--step1:使用springboot parent 作为父级依赖[end]-->

	<properties>
		<dubbo.version>2.7.4.1</dubbo.version>
		<zookeeper.version>0.11</zookeeper.version>
	</properties>

	<dependencies>
		<!--step2:添加spring Boot web 依赖关系【start】-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<!--step2:添加spring Boot web 依赖关系【end】-->
		<!--step3:使用dubbo 的依赖关系【start】-->
		<dependency>
			<groupId>org.apache.dubbo</groupId>
			<artifactId>dubbo</artifactId>
			<version>${dubbo.version}</version>
			<!--dubbo 也要用到 spring的一些依赖关系，如以来的jar包发生版本冲突，策略是移除dubbo的依赖，保留spring 的-->
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-context</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!--step3:使用dubbo 的依赖关系【end】-->
		<!--step4:配置springBoot 和dubbo 结合的依赖关系【start】-->
		<dependency>
			<groupId>org.apache.dubbo</groupId>
			<artifactId>dubbo-spring-boot-starter</artifactId>
			<version>${dubbo.version}</version>
		</dependency>
		<!--step4:配置springBoot 和dubbo 结合的依赖关系【end】-->
		<!--step5:配置zookeeper 客户端zkclient的依赖关系【start】-->
		<dependency>
			<groupId>com.101tec</groupId>
			<artifactId>zkclient</artifactId>
			<version>${zookeeper.version}</version>
		</dependency>
		<!--引入zookeeper 的依赖包：curator[start]-->
		<dependency>
			<groupId>org.apache.curator</groupId>
			<artifactId>curator-recipes</artifactId>
			<version>4.2.0</version>
		</dependency>
		<!--引入zookeeper 的依赖包：curator[end]-->
		<!--step5:配置zookeeper 客户端zkclient的依赖关系【end】-->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<artifactId>maven-clean-plugin</artifactId>
					<version>3.1.0</version>
				</plugin>
				<plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<version>3.0.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.8.0</version>
				</plugin>
				<plugin>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.22.1</version>
				</plugin>
				<plugin>
					<artifactId>maven-jar-plugin</artifactId>
					<version>3.0.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-install-plugin</artifactId>
					<version>2.5.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>2.8.2</version>
				</plugin>
				<!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
				<plugin>
					<artifactId>maven-site-plugin</artifactId>
					<version>3.7.1</version>
				</plugin>
				<plugin>
					<artifactId>maven-project-info-reports-plugin</artifactId>
					<version>3.0.0</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
